|part2
CLOCK_50 => CLOCK_50.IN6
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN10
SW[3] => SW[3].IN2
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => enableHEX.IN4
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => SW[9].IN1
HEX0[0] <= hex_decoder:hexzero.segments
HEX0[1] <= hex_decoder:hexzero.segments
HEX0[2] <= hex_decoder:hexzero.segments
HEX0[3] <= hex_decoder:hexzero.segments
HEX0[4] <= hex_decoder:hexzero.segments
HEX0[5] <= hex_decoder:hexzero.segments
HEX0[6] <= hex_decoder:hexzero.segments
HEX1[0] <= hex_decoder:hexone.segments
HEX1[1] <= hex_decoder:hexone.segments
HEX1[2] <= hex_decoder:hexone.segments
HEX1[3] <= hex_decoder:hexone.segments
HEX1[4] <= hex_decoder:hexone.segments
HEX1[5] <= hex_decoder:hexone.segments
HEX1[6] <= hex_decoder:hexone.segments
HEX2[0] <= hex_decoder:hextwo.segments
HEX2[1] <= hex_decoder:hextwo.segments
HEX2[2] <= hex_decoder:hextwo.segments
HEX2[3] <= hex_decoder:hextwo.segments
HEX2[4] <= hex_decoder:hextwo.segments
HEX2[5] <= hex_decoder:hextwo.segments
HEX2[6] <= hex_decoder:hextwo.segments
HEX3[0] <= hex_decoder:hexthree.segments
HEX3[1] <= hex_decoder:hexthree.segments
HEX3[2] <= hex_decoder:hexthree.segments
HEX3[3] <= hex_decoder:hexthree.segments
HEX3[4] <= hex_decoder:hexthree.segments
HEX3[5] <= hex_decoder:hexthree.segments
HEX3[6] <= hex_decoder:hexthree.segments
HEX4[0] <= hex_decoder:hexfour.segments
HEX4[1] <= hex_decoder:hexfour.segments
HEX4[2] <= hex_decoder:hexfour.segments
HEX4[3] <= hex_decoder:hexfour.segments
HEX4[4] <= hex_decoder:hexfour.segments
HEX4[5] <= hex_decoder:hexfour.segments
HEX4[6] <= hex_decoder:hexfour.segments
HEX5[0] <= hex_decoder:hexfive.segments
HEX5[1] <= hex_decoder:hexfive.segments
HEX5[2] <= hex_decoder:hexfive.segments
HEX5[3] <= hex_decoder:hexfive.segments
HEX5[4] <= hex_decoder:hexfive.segments
HEX5[5] <= hex_decoder:hexfive.segments
HEX5[6] <= hex_decoder:hexfive.segments
LEDR[0] <= keyboard_press_driver:keytest.valid
LEDR[1] <= makeBreak.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_R[8] <= vga_adapter:VGA.VGA_R
VGA_R[9] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_G[8] <= vga_adapter:VGA.VGA_G
VGA_G[9] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
VGA_B[8] <= vga_adapter:VGA.VGA_B
VGA_B[9] <= vga_adapter:VGA.VGA_B
PS2_DAT <> keyboard_press_driver:keytest.PS2_DAT
PS2_CLK <> keyboard_press_driver:keytest.PS2_CLK


|part2|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|part2|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|part2|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|part2|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|part2|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|part2|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|part2|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|part2|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|part2|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|part2|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|part2|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|part2|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|part2|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|part2|keyboard_press_driver:keytest
CLOCK_50 => CLOCK_50.IN1
valid <= valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
makeBreak <= makeBreak~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[0] <= outCode[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[1] <= outCode[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[2] <= outCode[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[3] <= outCode[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[4] <= outCode[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[5] <= outCode[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[6] <= outCode[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outCode[7] <= outCode[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PS2_DAT => PS2_DAT.IN1
PS2_CLK => PS2_CLK.IN1
reset => reset.IN1


|part2|keyboard_press_driver:keytest|keyboard_inner_driver:kbd
keyboard_clk => filter[7].DATAIN
keyboard_data => shiftin.DATAB
keyboard_data => always3.IN1
clock50 => clock.CLK
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => incnt.OUTPUTSELECT
reset => read_char.OUTPUTSELECT
reset => scan_code[1]~reg0.ENA
reset => scan_code[0]~reg0.ENA
reset => scan_code[2]~reg0.ENA
reset => scan_code[3]~reg0.ENA
reset => scan_code[4]~reg0.ENA
reset => scan_code[5]~reg0.ENA
reset => scan_code[6]~reg0.ENA
reset => scan_code[7]~reg0.ENA
reset => shiftin[0].ENA
reset => shiftin[1].ENA
reset => shiftin[2].ENA
reset => shiftin[3].ENA
reset => shiftin[4].ENA
reset => shiftin[5].ENA
reset => shiftin[6].ENA
reset => shiftin[7].ENA
reset => shiftin[8].ENA
reset => ready_set.ENA
read => scan_ready~reg0.ACLR
scan_ready <= scan_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[0] <= scan_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[1] <= scan_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[2] <= scan_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[3] <= scan_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[4] <= scan_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[5] <= scan_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[6] <= scan_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[7] <= scan_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|TimeCounter:tc
count_enable => ~NO_FANOUT~
clk => erase~reg0.CLK
clk => draw~reg0.CLK
clk => display~reg0.CLK
clk => q[0].CLK
clk => q[1].CLK
clk => q[2].CLK
clk => q[3].CLK
clk => q[4].CLK
clk => q[5].CLK
clk => q[6].CLK
clk => q[7].CLK
clk => q[8].CLK
clk => q[9].CLK
clk => q[10].CLK
clk => q[11].CLK
clk => q[12].CLK
clk => q[13].CLK
clk => q[14].CLK
clk => q[15].CLK
clk => q[16].CLK
clk => q[17].CLK
clk => q[18].CLK
clk => q[19].CLK
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => q.OUTPUTSELECT
reset_n => display.OUTPUTSELECT
reset_n => draw.OUTPUTSELECT
reset_n => erase.OUTPUTSELECT
difficulty[0] => Mult0.IN19
difficulty[1] => Mult0.IN18
display <= display~reg0.DB_MAX_OUTPUT_PORT_TYPE
erase <= erase~reg0.DB_MAX_OUTPUT_PORT_TYPE
draw <= draw~reg0.DB_MAX_OUTPUT_PORT_TYPE
pause => always0.IN1


|part2|XCounter:xc
count_enable => ~NO_FANOUT~
clk => rhitPulse~reg0.CLK
clk => lhitPulse~reg0.CLK
clk => direction.CLK
clk => xDisplay[0]~reg0.CLK
clk => xDisplay[1]~reg0.CLK
clk => xDisplay[2]~reg0.CLK
clk => xDisplay[3]~reg0.CLK
clk => xDisplay[4]~reg0.CLK
clk => xDisplay[5]~reg0.CLK
clk => xDisplay[6]~reg0.CLK
clk => xDisplay[7]~reg0.CLK
reset_n => xDisplay[7].IN0
xDisplay[0] <= xDisplay[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[1] <= xDisplay[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[2] <= xDisplay[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[3] <= xDisplay[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[4] <= xDisplay[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[5] <= xDisplay[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[6] <= xDisplay[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
xDisplay[7] <= xDisplay[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lhitPulse <= lhitPulse~reg0.DB_MAX_OUTPUT_PORT_TYPE
rhitPulse <= rhitPulse~reg0.DB_MAX_OUTPUT_PORT_TYPE
softReset => xDisplay[7].IN1


|part2|YCounter:yc
count_enable => ~NO_FANOUT~
clk => direction.CLK
clk => yDisplay[0]~reg0.CLK
clk => yDisplay[1]~reg0.CLK
clk => yDisplay[2]~reg0.CLK
clk => yDisplay[3]~reg0.CLK
clk => yDisplay[4]~reg0.CLK
clk => yDisplay[5]~reg0.CLK
clk => yDisplay[6]~reg0.CLK
reset_n => yDisplay[6].IN0
yDisplay[0] <= yDisplay[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[1] <= yDisplay[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[2] <= yDisplay[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[3] <= yDisplay[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[4] <= yDisplay[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[5] <= yDisplay[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
yDisplay[6] <= yDisplay[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
softReset => yDisplay[6].IN1


|part2|lKeyBoardDetector:lDetect
clock => ldownCondition~reg0.CLK
clock => lupCondition~reg0.CLK
outCode[0] => Decoder0.IN7
outCode[1] => Decoder0.IN6
outCode[2] => Decoder0.IN5
outCode[3] => Decoder0.IN4
outCode[4] => Decoder0.IN3
outCode[5] => Decoder0.IN2
outCode[6] => Decoder0.IN1
outCode[7] => Decoder0.IN0
makeCode => Decoder0.IN8
lupCondition <= lupCondition~reg0.DB_MAX_OUTPUT_PORT_TYPE
ldownCondition <= ldownCondition~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|rKeyBoardDetector:rDetect
clock => rdownCondition~reg0.CLK
clock => rupCondition~reg0.CLK
outCode[0] => Decoder0.IN7
outCode[1] => Decoder0.IN6
outCode[2] => Decoder0.IN5
outCode[3] => Decoder0.IN4
outCode[4] => Decoder0.IN3
outCode[5] => Decoder0.IN2
outCode[6] => Decoder0.IN1
outCode[7] => Decoder0.IN0
makeCode => Decoder0.IN8
rupCondition <= rupCondition~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdownCondition <= rdownCondition~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|YPaddle:yleftPaddle
clk => ypDisplay[0]~reg0.CLK
clk => ypDisplay[1]~reg0.CLK
clk => ypDisplay[2]~reg0.CLK
clk => ypDisplay[3]~reg0.CLK
clk => ypDisplay[4]~reg0.CLK
clk => ypDisplay[5]~reg0.CLK
clk => ypDisplay[6]~reg0.CLK
reset_n => ypDisplay[6].IN0
moveEnable => ypDisplay[0]~reg0.ENA
moveEnable => ypDisplay[6]~reg0.ENA
moveEnable => ypDisplay[5]~reg0.ENA
moveEnable => ypDisplay[4]~reg0.ENA
moveEnable => ypDisplay[3]~reg0.ENA
moveEnable => ypDisplay[2]~reg0.ENA
moveEnable => ypDisplay[1]~reg0.ENA
up => always0.IN0
up => always0.IN0
down => always0.IN1
down => always0.IN1
ypDisplay[0] <= ypDisplay[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[1] <= ypDisplay[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[2] <= ypDisplay[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[3] <= ypDisplay[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[4] <= ypDisplay[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[5] <= ypDisplay[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[6] <= ypDisplay[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
softReset => ypDisplay[6].IN1


|part2|YPaddle:yrightPaddle
clk => ypDisplay[0]~reg0.CLK
clk => ypDisplay[1]~reg0.CLK
clk => ypDisplay[2]~reg0.CLK
clk => ypDisplay[3]~reg0.CLK
clk => ypDisplay[4]~reg0.CLK
clk => ypDisplay[5]~reg0.CLK
clk => ypDisplay[6]~reg0.CLK
reset_n => ypDisplay[6].IN0
moveEnable => ypDisplay[0]~reg0.ENA
moveEnable => ypDisplay[6]~reg0.ENA
moveEnable => ypDisplay[5]~reg0.ENA
moveEnable => ypDisplay[4]~reg0.ENA
moveEnable => ypDisplay[3]~reg0.ENA
moveEnable => ypDisplay[2]~reg0.ENA
moveEnable => ypDisplay[1]~reg0.ENA
up => always0.IN0
up => always0.IN0
down => always0.IN1
down => always0.IN1
ypDisplay[0] <= ypDisplay[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[1] <= ypDisplay[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[2] <= ypDisplay[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[3] <= ypDisplay[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[4] <= ypDisplay[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[5] <= ypDisplay[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ypDisplay[6] <= ypDisplay[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
softReset => ypDisplay[6].IN1


|part2|LeftScoreCounter:lScore
clock => outResetStrike~reg0.CLK
clock => lstrike[0]~reg0.CLK
clock => lstrike[1]~reg0.CLK
clock => lstrike[2]~reg0.CLK
clock => lstrike[3]~reg0.CLK
clock => lstrike[4]~reg0.CLK
clock => lstrike[5]~reg0.CLK
clock => lstrike[6]~reg0.CLK
clock => lstrike[7]~reg0.CLK
clock => lscore[0]~reg0.CLK
clock => lscore[1]~reg0.CLK
clock => lscore[2]~reg0.CLK
clock => lscore[3]~reg0.CLK
clock => lscore[4]~reg0.CLK
clock => lscore[5]~reg0.CLK
clock => lscore[6]~reg0.CLK
clock => lscore[7]~reg0.CLK
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => lstrike.OUTPUTSELECT
enable => outResetStrike.OUTPUTSELECT
enable => lscore[7]~reg0.ENA
enable => lscore[6]~reg0.ENA
enable => lscore[5]~reg0.ENA
enable => lscore[4]~reg0.ENA
enable => lscore[3]~reg0.ENA
enable => lscore[2]~reg0.ENA
enable => lscore[1]~reg0.ENA
enable => lscore[0]~reg0.ENA
Ypos[0] => LessThan1.IN14
Ypos[0] => LessThan2.IN12
Ypos[1] => LessThan1.IN13
Ypos[1] => LessThan2.IN11
Ypos[2] => LessThan1.IN12
Ypos[2] => LessThan2.IN10
Ypos[3] => LessThan1.IN11
Ypos[3] => LessThan2.IN9
Ypos[4] => LessThan1.IN10
Ypos[4] => LessThan2.IN8
Ypos[5] => LessThan1.IN9
Ypos[5] => LessThan2.IN7
Ypos[6] => LessThan1.IN8
Ypos[6] => LessThan2.IN6
lpaddle[0] => LessThan0.IN14
lpaddle[0] => lPaddleMin.DATAA
lpaddle[0] => LessThan2.IN14
lpaddle[1] => LessThan0.IN13
lpaddle[1] => lPaddleMin.DATAA
lpaddle[1] => LessThan2.IN13
lpaddle[2] => LessThan0.IN12
lpaddle[2] => Add0.IN10
lpaddle[2] => Add1.IN10
lpaddle[3] => LessThan0.IN11
lpaddle[3] => Add0.IN9
lpaddle[3] => Add1.IN9
lpaddle[4] => LessThan0.IN10
lpaddle[4] => Add0.IN8
lpaddle[4] => Add1.IN8
lpaddle[5] => LessThan0.IN9
lpaddle[5] => Add0.IN7
lpaddle[5] => Add1.IN7
lpaddle[6] => LessThan0.IN8
lpaddle[6] => Add0.IN6
lpaddle[6] => Add1.IN6
reset => lscore[0]~reg0.ACLR
reset => lscore[1]~reg0.ACLR
reset => lscore[2]~reg0.ACLR
reset => lscore[3]~reg0.ACLR
reset => lscore[4]~reg0.ACLR
reset => lscore[5]~reg0.ACLR
reset => lscore[6]~reg0.ACLR
reset => lscore[7]~reg0.ACLR
reset => always0.IN1
reset => outResetStrike~reg0.ENA
reset => lstrike[7]~reg0.ENA
reset => lstrike[6]~reg0.ENA
reset => lstrike[5]~reg0.ENA
reset => lstrike[4]~reg0.ENA
reset => lstrike[3]~reg0.ENA
reset => lstrike[2]~reg0.ENA
reset => lstrike[1]~reg0.ENA
reset => lstrike[0]~reg0.ENA
lscore[0] <= lscore[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[1] <= lscore[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[2] <= lscore[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[3] <= lscore[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[4] <= lscore[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[5] <= lscore[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[6] <= lscore[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lscore[7] <= lscore[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[0] <= lstrike[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[1] <= lstrike[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[2] <= lstrike[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[3] <= lstrike[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[4] <= lstrike[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[5] <= lstrike[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[6] <= lstrike[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
lstrike[7] <= lstrike[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inResetStrike => always0.IN1
outResetStrike <= outResetStrike~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|RightScoreCounter:rScore
clock => outResetStrike~reg0.CLK
clock => rstrike[0]~reg0.CLK
clock => rstrike[1]~reg0.CLK
clock => rstrike[2]~reg0.CLK
clock => rstrike[3]~reg0.CLK
clock => rstrike[4]~reg0.CLK
clock => rstrike[5]~reg0.CLK
clock => rstrike[6]~reg0.CLK
clock => rstrike[7]~reg0.CLK
clock => rscore[0]~reg0.CLK
clock => rscore[1]~reg0.CLK
clock => rscore[2]~reg0.CLK
clock => rscore[3]~reg0.CLK
clock => rscore[4]~reg0.CLK
clock => rscore[5]~reg0.CLK
clock => rscore[6]~reg0.CLK
clock => rscore[7]~reg0.CLK
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => rstrike.OUTPUTSELECT
enable => outResetStrike.OUTPUTSELECT
enable => rscore[7]~reg0.ENA
enable => rscore[6]~reg0.ENA
enable => rscore[5]~reg0.ENA
enable => rscore[4]~reg0.ENA
enable => rscore[3]~reg0.ENA
enable => rscore[2]~reg0.ENA
enable => rscore[1]~reg0.ENA
enable => rscore[0]~reg0.ENA
Ypos[0] => LessThan1.IN14
Ypos[0] => LessThan2.IN12
Ypos[1] => LessThan1.IN13
Ypos[1] => LessThan2.IN11
Ypos[2] => LessThan1.IN12
Ypos[2] => LessThan2.IN10
Ypos[3] => LessThan1.IN11
Ypos[3] => LessThan2.IN9
Ypos[4] => LessThan1.IN10
Ypos[4] => LessThan2.IN8
Ypos[5] => LessThan1.IN9
Ypos[5] => LessThan2.IN7
Ypos[6] => LessThan1.IN8
Ypos[6] => LessThan2.IN6
rpaddle[0] => LessThan0.IN14
rpaddle[0] => rPaddleMin.DATAA
rpaddle[0] => LessThan2.IN14
rpaddle[1] => LessThan0.IN13
rpaddle[1] => rPaddleMin.DATAA
rpaddle[1] => LessThan2.IN13
rpaddle[2] => LessThan0.IN12
rpaddle[2] => Add0.IN10
rpaddle[2] => Add1.IN10
rpaddle[3] => LessThan0.IN11
rpaddle[3] => Add0.IN9
rpaddle[3] => Add1.IN9
rpaddle[4] => LessThan0.IN10
rpaddle[4] => Add0.IN8
rpaddle[4] => Add1.IN8
rpaddle[5] => LessThan0.IN9
rpaddle[5] => Add0.IN7
rpaddle[5] => Add1.IN7
rpaddle[6] => LessThan0.IN8
rpaddle[6] => Add0.IN6
rpaddle[6] => Add1.IN6
reset => rscore[0]~reg0.ACLR
reset => rscore[1]~reg0.ACLR
reset => rscore[2]~reg0.ACLR
reset => rscore[3]~reg0.ACLR
reset => rscore[4]~reg0.ACLR
reset => rscore[5]~reg0.ACLR
reset => rscore[6]~reg0.ACLR
reset => rscore[7]~reg0.ACLR
reset => always0.IN1
reset => outResetStrike~reg0.ENA
reset => rstrike[7]~reg0.ENA
reset => rstrike[6]~reg0.ENA
reset => rstrike[5]~reg0.ENA
reset => rstrike[4]~reg0.ENA
reset => rstrike[3]~reg0.ENA
reset => rstrike[2]~reg0.ENA
reset => rstrike[1]~reg0.ENA
reset => rstrike[0]~reg0.ENA
rscore[0] <= rscore[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[1] <= rscore[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[2] <= rscore[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[3] <= rscore[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[4] <= rscore[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[5] <= rscore[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[6] <= rscore[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rscore[7] <= rscore[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[0] <= rstrike[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[1] <= rstrike[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[2] <= rstrike[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[3] <= rstrike[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[4] <= rstrike[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[5] <= rstrike[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[6] <= rstrike[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rstrike[7] <= rstrike[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inResetStrike => always0.IN1
outResetStrike <= outResetStrike~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|StrikeDetector:strikeDetect
enable => strike[7]$latch.LATCH_ENABLE
enable => strike[6]$latch.LATCH_ENABLE
enable => strike[5]$latch.LATCH_ENABLE
enable => strike[4]$latch.LATCH_ENABLE
enable => strike[3]$latch.LATCH_ENABLE
enable => strike[2]$latch.LATCH_ENABLE
enable => strike[1]$latch.LATCH_ENABLE
enable => strike[0]$latch.LATCH_ENABLE
reset => always0.IN1
lstrike[0] => Add0.IN8
lstrike[1] => Add0.IN7
lstrike[2] => Add0.IN6
lstrike[3] => Add0.IN5
lstrike[4] => Add0.IN4
lstrike[5] => Add0.IN3
lstrike[6] => Add0.IN2
lstrike[7] => Add0.IN1
rstrike[0] => Add0.IN16
rstrike[1] => Add0.IN15
rstrike[2] => Add0.IN14
rstrike[3] => Add0.IN13
rstrike[4] => Add0.IN12
rstrike[5] => Add0.IN11
rstrike[6] => Add0.IN10
rstrike[7] => Add0.IN9
strike[0] <= strike[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[1] <= strike[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[2] <= strike[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[3] <= strike[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[4] <= strike[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[5] <= strike[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[6] <= strike[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
strike[7] <= strike[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
loutResetStrike => always0.IN1
routResetStrike => always0.IN1


|part2|datapathFSM:fsm0
clock => clock.IN5
eraseIn => Selector5.IN3
eraseIn => Selector4.IN2
drawIn => next_state.DATAB
drawIn => Selector8.IN2
Xin[0] => Add8.IN14
Xin[1] => Add8.IN13
Xin[2] => Add8.IN12
Xin[3] => Add8.IN11
Xin[4] => Add8.IN10
Xin[5] => Add8.IN9
Xin[6] => Add8.IN8
Xin[7] => Add8.IN7
Yin[0] => Add9.IN12
Yin[1] => Add9.IN11
Yin[2] => Add9.IN10
Yin[3] => Add9.IN9
Yin[4] => Add9.IN8
Yin[5] => Add9.IN7
Yin[6] => Add9.IN6
leftPaddleXin[0] => Add10.IN10
leftPaddleXin[1] => Add10.IN9
leftPaddleXin[2] => Add10.IN8
leftPaddleXin[3] => Add10.IN7
leftPaddleXin[4] => Add10.IN6
leftPaddleXin[5] => Add10.IN5
leftPaddleXin[6] => Add10.IN4
leftPaddleXin[7] => Add10.IN3
leftPaddleYin[0] => Add11.IN8
leftPaddleYin[1] => Add11.IN7
leftPaddleYin[2] => Add11.IN6
leftPaddleYin[3] => Add11.IN5
leftPaddleYin[4] => Add11.IN4
leftPaddleYin[5] => Add11.IN3
leftPaddleYin[6] => Add11.IN2
rightPaddleXin[0] => Add12.IN10
rightPaddleXin[1] => Add12.IN9
rightPaddleXin[2] => Add12.IN8
rightPaddleXin[3] => Add12.IN7
rightPaddleXin[4] => Add12.IN6
rightPaddleXin[5] => Add12.IN5
rightPaddleXin[6] => Add12.IN4
rightPaddleXin[7] => Add12.IN3
rightPaddleYin[0] => Add13.IN8
rightPaddleYin[1] => Add13.IN7
rightPaddleYin[2] => Add13.IN6
rightPaddleYin[3] => Add13.IN5
rightPaddleYin[4] => Add13.IN4
rightPaddleYin[5] => Add13.IN3
rightPaddleYin[6] => Add13.IN2
resetn => current_state.S_DRAW_BORDER.IN0
resetn => borderCount[9].IN0
resetn => comb.IN1
resetn => comb.IN1
resetn => comb.IN1
colorSwitch[0] => Selector16.IN4
colorSwitch[1] => Selector15.IN4
colorSwitch[2] => Selector14.IN4
enableCounter <= enableCounter~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[0] <= Xout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[1] <= Xout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[2] <= Xout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[3] <= Xout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[4] <= Xout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[5] <= Xout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[6] <= Xout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Xout[7] <= Xout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[0] <= Yout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[1] <= Yout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[2] <= Yout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[3] <= Yout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[4] <= Yout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[5] <= Yout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Yout[6] <= Yout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[0] <= colour[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[1] <= colour[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
colour[2] <= colour[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
writeEn <= writeEn~reg0.DB_MAX_OUTPUT_PORT_TYPE
softReset => current_state.S_DRAW_BORDER.IN1
softReset => borderCount[9].IN1


|part2|datapathFSM:fsm0|drawBorder:m0
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => x.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
enable => y.OUTPUTSELECT
x[0] <= x[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => y[0]~reg0.CLK
clk => y[1]~reg0.CLK
clk => y[2]~reg0.CLK
clk => y[3]~reg0.CLK
clk => y[4]~reg0.CLK
clk => y[5]~reg0.CLK
clk => y[6]~reg0.CLK
clk => x[0]~reg0.CLK
clk => x[1]~reg0.CLK
clk => x[2]~reg0.CLK
clk => x[3]~reg0.CLK
clk => x[4]~reg0.CLK
clk => x[5]~reg0.CLK
clk => x[6]~reg0.CLK
clk => x[7]~reg0.CLK


|part2|datapathFSM:fsm0|squareFSM:m1
clock => display[0]~reg0.CLK
clock => display[1]~reg0.CLK
clock => display[2]~reg0.CLK
clock => display[3]~reg0.CLK
clock => display[4]~reg0.CLK
reset => display.OUTPUTSELECT
reset => display.OUTPUTSELECT
reset => display.OUTPUTSELECT
reset => display.OUTPUTSELECT
reset => display.OUTPUTSELECT
enable => display.OUTPUTSELECT
enable => display.OUTPUTSELECT
enable => display.OUTPUTSELECT
enable => display.OUTPUTSELECT
enable => display.OUTPUTSELECT
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|datapathFSM:fsm0|paddleFSM:m2
clock => paddleY[0]~reg0.CLK
clock => paddleY[1]~reg0.CLK
clock => paddleY[2]~reg0.CLK
clock => paddleY[3]~reg0.CLK
clock => paddleY[4]~reg0.CLK
clock => paddleY[5]~reg0.CLK
clock => paddleX[0]~reg0.CLK
clock => paddleX[1]~reg0.CLK
clock => paddleX[2]~reg0.CLK
clock => paddleX[3]~reg0.CLK
clock => paddleX[4]~reg0.CLK
clock => paddleX[5]~reg0.CLK
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
paddleX[0] <= paddleX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[1] <= paddleX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[2] <= paddleX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[3] <= paddleX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[4] <= paddleX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[5] <= paddleX[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[0] <= paddleY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[1] <= paddleY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[2] <= paddleY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[3] <= paddleY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[4] <= paddleY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[5] <= paddleY[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|datapathFSM:fsm0|paddleFSM:m3
clock => paddleY[0]~reg0.CLK
clock => paddleY[1]~reg0.CLK
clock => paddleY[2]~reg0.CLK
clock => paddleY[3]~reg0.CLK
clock => paddleY[4]~reg0.CLK
clock => paddleY[5]~reg0.CLK
clock => paddleX[0]~reg0.CLK
clock => paddleX[1]~reg0.CLK
clock => paddleX[2]~reg0.CLK
clock => paddleX[3]~reg0.CLK
clock => paddleX[4]~reg0.CLK
clock => paddleX[5]~reg0.CLK
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleY.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
enable => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleX.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
reset => paddleY.OUTPUTSELECT
paddleX[0] <= paddleX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[1] <= paddleX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[2] <= paddleX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[3] <= paddleX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[4] <= paddleX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleX[5] <= paddleX[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[0] <= paddleY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[1] <= paddleY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[2] <= paddleY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[3] <= paddleY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[4] <= paddleY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
paddleY[5] <= paddleY[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|datapathFSM:fsm0|eraseAll:m4
clock => eraseY[0]~reg0.CLK
clock => eraseY[1]~reg0.CLK
clock => eraseY[2]~reg0.CLK
clock => eraseY[3]~reg0.CLK
clock => eraseY[4]~reg0.CLK
clock => eraseY[5]~reg0.CLK
clock => eraseY[6]~reg0.CLK
clock => eraseX[0]~reg0.CLK
clock => eraseX[1]~reg0.CLK
clock => eraseX[2]~reg0.CLK
clock => eraseX[3]~reg0.CLK
clock => eraseX[4]~reg0.CLK
clock => eraseX[5]~reg0.CLK
clock => eraseX[6]~reg0.CLK
clock => eraseX[7]~reg0.CLK
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseY.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
enable => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseX.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
reset => eraseY.OUTPUTSELECT
eraseX[0] <= eraseX[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[1] <= eraseX[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[2] <= eraseX[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[3] <= eraseX[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[4] <= eraseX[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[5] <= eraseX[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[6] <= eraseX[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseX[7] <= eraseX[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[0] <= eraseY[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[1] <= eraseY[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[2] <= eraseY[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[3] <= eraseY[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[4] <= eraseY[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[5] <= eraseY[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
eraseY[6] <= eraseY[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hexzero
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hexone
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hextwo
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hexthree
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hexfour
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|part2|hex_decoder:hexfive
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


